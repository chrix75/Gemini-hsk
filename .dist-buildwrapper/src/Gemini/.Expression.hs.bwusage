["Gemini-0.2","Gemini.Expression",[20,8,25],{"containers-0.5.0.0":{"Data.Map.Base":{"vars":{"singleton":[{"d":false,"s":"buildBestTree","l":[102,48,59]}],"empty":[{"d":false,"s":"buildBestTree","l":[100,20,27]}],"keys":[{"d":false,"s":"computeAverage","l":[109,41,47]}],"insertWith":[{"d":false,"s":"buildBestTree","l":[104,67,79]}]},"types":{"Map":[{"d":false,"s":"buildBestTree","l":[100,31,36]},{"d":false,"s":"computeAverage","l":[107,19,24]},{"d":false,"s":"","l":[98,48,53]}]}},"Data.Map":{"vars":{"fold":[{"d":false,"s":"computeAverage","l":[108,20,26]}],"":[{"d":false,"s":"import","l":[23,18,26]}]}}},"ghc-prim":{"GHC.Types":{"vars":{"[]":[{"d":false,"s":"buildBestTree","l":[100,15,17]},{"d":false,"s":"buildBestTree","l":[103,31,33]},{"d":false,"s":"removeWeakWords","l":[87,38,40]},{"d":false,"s":"allComparisons","l":[71,31,33]},{"d":false,"s":"allComparisons","l":[72,24,26]},{"d":false,"s":"allComparisons","l":[72,33,35]}],":":[{"d":false,"s":"buildBestTree","l":[102,22]},{"d":false,"s":"buildBestTree","l":[104,38]},{"d":false,"s":"allComparisons","l":[71,26]},{"d":false,"s":"allComparisons","l":[73,28]},{"d":false,"s":"allComparisons","l":[73,34]},{"d":false,"s":"allComparisons","l":[73,50]}]},"types":{"Double":[{"d":false,"s":"buildBestTree","l":[100,41,47]},{"d":false,"s":"computeAverage","l":[107,29,35]},{"d":false,"s":"computeAverage","l":[107,39,45]},{"d":false,"s":"","l":[98,36,42]},{"d":false,"s":"","l":[98,58,64]},{"d":false,"s":"resultToMarksList","l":[93,66,72]},{"d":false,"s":"likeness","l":[60,79,85]},{"d":false,"s":"Result","l":[30,32,38]}]}},"GHC.Classes":{"vars":{"||":[{"d":false,"s":"removeWeakWords","l":[88,53,55]}],"&&":[{"d":false,"s":"compareExpressions","l":[82,99,101]}],"max":[{"d":false,"s":"buildBestTree","l":[104,93,96]}]},"types":{"Eq":[{"d":false,"s":"removeWeakWords","l":[86,21,23]},{"d":false,"s":"compareExpressions","l":[81,24,26]},{"d":false,"s":"likeness","l":[60,14,16]}],"Ord":[{"d":false,"s":"","l":[98,19,22]},{"d":false,"s":"likeness","l":[60,20,23]}]}}},"Gemini-0.2":{"Gemini.Types":{"vars":{"":[{"d":false,"s":"import","l":[24,8,20]}]},"types":{"Equivalence":[{"d":false,"s":"import","l":[24,22,37]},{"d":false,"s":"compareExpressions","l":[81,43,54]},{"d":false,"s":"likeness","l":[60,40,51]}]}},"Gemini.Comparison":{"vars":{"likeness":[{"d":false,"s":"compareExpressions","l":[83,62,72]}],"":[{"d":false,"s":"import","l":[22,18,35]}]}},"Gemini.Expression":{"vars":{"Expr":[{"d":false,"s":"compareExpressions","l":[82,32,36]},{"d":false,"s":"compareExpressions","l":[82,41,45]},{"d":true,"s":"Expr","l":[26,15,19]}],"Result":[{"d":false,"s":"resultToMarksList","l":[95,24,30]},{"d":false,"s":"compareExpressions","l":[83,29,35]},{"d":true,"s":"Result","l":[28,17,23]}],"compareExpressions":[{"d":true,"s":"compareExpressions","l":[82,1,83,84]},{"d":false,"s":"likeness","l":[64,21,39]},{"d":true,"s":"compareExpressions","l":[81,1,19]}],"removeWeakWords":[{"d":true,"s":"removeWeakWords","l":[87,1,90,53]},{"d":true,"s":"removeWeakWords","l":[86,1,16]}],"buildBestTree":[{"d":true,"s":"buildBestTree","l":[100,1,47]},{"d":true,"s":"buildBestTree","l":[102,1,104,111]},{"d":false,"s":"likeness","l":[63,20,33]},{"d":false,"s":"likeness","l":[62,20,33]},{"d":false,"s":"","l":[98,1,14]}],"likeness":[{"d":false,"s":"export","l":[20,27,35]},{"d":true,"s":"likeness","l":[61,1,66,47]},{"d":true,"s":"likeness","l":[60,1,9]}],"terms":[{"d":false,"s":"compareExpressions","l":[83,38,43]},{"d":true,"s":"Result","l":[29,24,29]}],"resultToMarksList":[{"d":true,"s":"resultToMarksList","l":[94,1,95,48]},{"d":false,"s":"likeness","l":[65,20,37]},{"d":false,"s":"likeness","l":[66,20,37]},{"d":true,"s":"resultToMarksList","l":[93,1,18]}],"computeAverage":[{"d":true,"s":"computeAverage","l":[108,1,109,51]},{"d":false,"s":"likeness","l":[61,28,42]},{"d":false,"s":"likeness","l":[61,48,62]},{"d":true,"s":"computeAverage","l":[107,1,15]}],"allComparisons":[{"d":true,"s":"allComparisons","l":[70,1,73,67]},{"d":false,"s":"compareExpressions","l":[82,124,138]},{"d":true,"s":"allComparisons","l":[69,1,15]}],"mark":[{"d":false,"s":"compareExpressions","l":[83,55,59]},{"d":true,"s":"Result","l":[30,24,28]}]},"types":{"Expr":[{"d":false,"s":"export","l":[20,37,45]},{"d":false,"s":"compareExpressions","l":[81,62,66]},{"d":false,"s":"compareExpressions","l":[81,72,76]},{"d":false,"s":"likeness","l":[60,59,63]},{"d":false,"s":"likeness","l":[60,69,73]},{"d":true,"s":"Expr","l":[26,6,10]}],"Result":[{"d":false,"s":"resultToMarksList","l":[93,23,29]},{"d":false,"s":"compareExpressions","l":[81,83,89]},{"d":true,"s":"Result","l":[28,6,12]}]}}},"base":{"Prelude":{"vars":{"":[{"d":false,"s":"import","l":[20,8,25]}]}},"GHC.Show":{"types":{"Show":[{"d":false,"s":"Result","l":[31,29,33]}]}},"GHC.Real":{"vars":{"/":[{"d":false,"s":"computeAverage","l":[108,47]},{"d":false,"s":"likeness","l":[61,67]}],"fromIntegral":[{"d":false,"s":"computeAverage","l":[109,19,31]}]}},"GHC.Base":{"vars":{"map":[{"d":false,"s":"resultToMarksList","l":[94,26,29]},{"d":false,"s":"compareExpressions","l":[82,51,54]}],"$":[{"d":false,"s":"buildBestTree","l":[104,65]},{"d":false,"s":"compareExpressions","l":[82,59]},{"d":false,"s":"compareExpressions","l":[82,122]}],"++":[{"d":false,"s":"removeWeakWords","l":[90,47,49]}]}},"GHC.Num":{"vars":{"fromInteger":[{"d":false,"s":"computeAverage","l":[108,43]},{"d":false,"s":"likeness","l":[61,69]}],"+":[{"d":false,"s":"computeAverage","l":[108,38]},{"d":false,"s":"likeness","l":[61,46]}]}},"Data.Tuple":{"vars":{"snd":[{"d":false,"s":"likeness","l":[66,43,46]}],"fst":[{"d":false,"s":"likeness","l":[65,43,46]}]}},"GHC.List":{"vars":{"length":[{"d":false,"s":"computeAverage","l":[109,33,39]}],"elem":[{"d":false,"s":"removeWeakWords","l":[88,43,49]},{"d":false,"s":"removeWeakWords","l":[88,59,65]}],"notElem":[{"d":false,"s":"compareExpressions","l":[82,83,92]},{"d":false,"s":"compareExpressions","l":[82,105,114]}],"filter":[{"d":false,"s":"compareExpressions","l":[82,61,67]}],"foldl":[{"d":false,"s":"removeWeakWords","l":[87,25,30]}]}}}},{"o":[{"sl":null,"t":["Data"],"d":null,"n":"Expr","s":null,"c":[{"sl":null,"t":["Constructor"],"d":null,"n":"Expr","s":null,"c":[],"l":[26,15,25]}],"l":[26,1,25]},{"sl":null,"t":["Data"],"d":null,"n":"Result","s":null,"c":[{"sl":null,"t":["Constructor"],"d":null,"n":"Result","s":null,"c":[{"sl":null,"t":["Field"],"d":null,"n":"terms","s":null,"c":[],"l":[29,24,43]},{"sl":null,"t":["Field"],"d":null,"n":"mark","s":null,"c":[],"l":[30,24,38]}],"l":[28,17,31,18]}],"l":[28,1,31,34]},{"sl":33,"t":["Function"],"d":"The likeness function is the main function which provides the likeness score.\n  It takes 4 arguments. The first one is a list of weak words. A weak word is a\n  word isn't used for the score computation. In other terms, a weak word is an\n  optional word may be not present in expressions.\n  \n  The second argument is a list of equivalences. For more details about equivalences,\n  read the Equivalence module documentation.\n  \n  The 2 last arguments are the compared expressions.\n  \n  The result of the function is the score saved into a double value.\n  \n  The comparison made in this function doesn't take care about the words order. \n  Thus, if you compare 2 person data like \"christian sperandio\" vs. \"sperandio christian\"\n  or \"sperandio christian\" vs. \"christian sperandio\", these comparaisons give the same\n  result. \n  \n  Two examples showing the impact of weaks words below:\n  \n  \u003e\u003e\u003e likeness [] [] (Expr (words \"ibm software corporate\")) (Expr (words \"ibm software\"))\n  0.8571428571428572\n  \n  \u003e\u003e\u003e likeness [\"corporate\"] [] (Expr (words \"ibm software corporate\")) (Expr (words \"ibm software\"))\n  1.0\n   \n","n":"likeness","s":"  (Eq a, Ord a) =\u003e\n  [[a]] -\u003e [Equivalence a] -\u003e Expr a -\u003e Expr a -\u003e Double","c":[],"l":[60,1,69,0]},{"sl":68,"t":["Function"],"d":"The allComparaisons functions returns all possible comparaisons for 2 lists of words.              ","n":"allComparisons","s":"[[a]] -\u003e [[a]] -\u003e [([a], [a])]","c":[],"l":[69,1,81,0]},{"sl":75,"t":["Function"],"d":"The compareExpressions function compares the expressions words each other (except the weak words).\n  The arguments of this function are the same as the likeness function.\n  \n  This function returns a list of Result data. \n","n":"compareExpressions","s":"  (Eq a) =\u003e\n  [[a]] -\u003e [Equivalence a] -\u003e Expr a -\u003e Expr a -\u003e [Result a]","c":[],"l":[81,1,86,0]},{"sl":85,"t":["Function"],"d":"Remove the weak words from the comparisons todo list.","n":"removeWeakWords","s":"  (Eq a) =\u003e [([a], [a])] -\u003e [[a]] -\u003e [([a], [a])]","c":[],"l":[86,1,93,0]},{"sl":92,"t":["Function"],"d":"Converts a list of Result data to a list will be used to build a tree to compute the final score.        ","n":"resultToMarksList","s":"[Result a] -\u003e (([a], [a]) -\u003e [a]) -\u003e [([a], Double)]","c":[],"l":[93,1,98,0]},{"sl":null,"t":["Function"],"d":null,"n":"buildBestTree","s":"  (Ord a) =\u003e [([a], Double)] -\u003e M.Map [a] Double","c":[],"l":[100,1,107,0]},{"sl":106,"t":["Function"],"d":"Computes the average of each item of a tree.","n":"computeAverage","s":"M.Map [a] Double -\u003e Double","c":[],"l":[107,1,112,0]}],"i":[{"c":null,"h":false,"m":"Gemini.Comparison","l":[22,1,40],"q":true,"a":"C","p":null},{"c":null,"h":false,"m":"Data.Map","l":[23,1,31],"q":true,"a":"M","p":null},{"c":[{"t":"IEThingAll","n":"Equivalence","c":[],"l":[24,22,37]}],"h":false,"m":"Gemini.Types","l":[24,1,38],"q":false,"a":"","p":null}],"e":[{"t":"IEVar","n":"likeness","c":[],"l":[20,27,35]},{"t":"IEThingAll","n":"Expr","c":[],"l":[20,37,45]}]}]